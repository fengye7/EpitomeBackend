"""
Django settings for epitome_pyBackend project.

Generated by 'django-admin startproject' using Django 5.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

import os
from pathlib import Path
from decouple import config


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'kling_server',
    'smart_teaching_server',
    # 下面是注册使用swagger
    'rest_framework',
    'drf_yasg',
    'django.contrib.staticfiles',   # 必须启用 
    'corsheaders',
]

MIDDLEWARE = [
    # 安全相关中间件优先 
    'django.middleware.security.SecurityMiddleware', 

    # CORS中间件必须紧接安全中间件之后 
    'corsheaders.middleware.CorsMiddleware',   # ← 关键位置 
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

    'middleware.language_middleware.CustomLanguageMiddleware',
    # 'django.middleware.locale.LocaleMiddleware', # 用于国际化的中间件(由于前端返回的语言标识和django的不符，改为自己的映射)
]

ROOT_URLCONF = 'epitome_pyBackend.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'epitome_pyBackend.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

# Database (localhost版)
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',  # MySQL 数据库
        'NAME': 'epitome_backend',           # MySQL 数据库名称
        'USER': 'epitome',                 # MySQL 用户名
        'PASSWORD': '123456',             # MySQL 密码
        'HOST': 'localhost',                     # MySQL 地址
        'PORT': '3306',                          # MySQL 默认端口
    }
}

# Database (docker-compose版)
# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.mysql',
#         'NAME': os.getenv('DB_NAME', 'epitome_backend'),
#         'USER': os.getenv('DB_USER', 'epitome'),
#         'PASSWORD': os.getenv('DB_PASSWORD', '123456'),
#         'HOST': os.getenv('DB_HOST', 'epitomeDb'),
#         'PORT': os.getenv('DB_PORT', '3306'),
#     }
# }

# Database (.env版)
# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.mysql',
#         'NAME': config('DB_NAME', default='epitome_backend'),
#         'USER': config('DB_USER', default='epitome'),
#         'PASSWORD': config('DB_PASSWORD', default='123456'),
#         'HOST': config('DB_HOST', default='epitomeDb'),
#         'PORT': config('DB_PORT', default='3306'),
#     }
# }


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/


TIME_ZONE = 'UTC'

LANGUAGE_CODE = 'en-us'
# LANGUAGE_CODE = 'zh-hans'  # 默认语言，可以是 'en-us'

USE_I18N = True

# 启用本地化
USE_L10N = True

LANGUAGES = [
    ('zh-Hans', 'Simplified Chinese'),
    ('en', 'English'),
]

LOCALE_PATHS = [
    os.path.join(BASE_DIR, 'locale')
]


USE_TZ = True


# 如果你不需要携带凭据，可以暂时使用全局允许
# CORS_ALLOW_ALL_ORIGINS = True

# 如果需要携带凭据（例如 Cookie），则配置如下：
CORS_ALLOW_ALL_ORIGINS = False
CORS_ALLOWED_ORIGINS = [
    "http://localhost:7777",    # 前端地址
    "http://127.0.0.1:7777",    # 根据你的实际情况添加
    "http://localhost:7778",
    "http://127.0.0.1:7778",
    "http://localhost:7776",
    "http://127.0.0.1:7776",

    "http://61.169.23.150:7777",
    "http://61.169.23.150:7778",
    "http://61.169.23.150:7776",
]
CORS_ALLOW_CREDENTIALS = True
CORS_ALLOW_HEADERS = [
    'content-type',
    'authorization',
    'x-csrftoken',
    'accept',
    'origin',
    'user-agent',
    'language',  # 添加这一行
    'accept-language',  # 国际化
]


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, "static_root")
STATICFILES_DIRS = (
    os.path.join(BASE_DIR, "static_dirs"),
)

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, "media_root")

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# 可选：用于 nginx 访问路径的域名
MEDIA_DOMAIN = config('MEDIA_DOMAIN') # 或 'https://your.domain.com'